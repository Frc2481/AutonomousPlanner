
package autonomousplanner.UI;


import autonomousplanner.ContinuousPath;
import autonomousplanner.DumbFollower;
import autonomousplanner.GraphicalFollower;
import autonomousplanner.Util;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;

/**
 * Open file dialog for importing an existing path.
 * The file is read into a string, which is converted into
 * a robot segment group, which can be manipulated easily.
 * @author Jared
 */
@SuppressWarnings("serial")
public class OpenFile extends javax.swing.JFrame {
    /**
     * Creates new form OpenFile
     * @param bot
     */
    public OpenFile() {
        initComponents();
        this.setLocation(600, 100);
        setTitle("Open a path file...");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();

        jFileChooser1.setDialogType(javax.swing.JFileChooser.OPEN_DIALOG);
        jFileChooser1.setCurrentDirectory(new java.io.File("C:\\notarealfolder"));
        jFileChooser1.setDialogTitle("Open Path");
        jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser1ActionPerformed(evt);
            }
        });
        

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jFileChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void jFileChooser1ActionPerformed(java.awt.event.ActionEvent evt) {                                              
        if(evt.getActionCommand().equals(JFileChooser.CANCEL_SELECTION)){
            this.setVisible(false);
        }else{
            //bot.savePath(jFileChooser1.getSelectedFile().getAbsoluteFile());
            try {
                new Player(Util.stringToPath236(Util.readStringFromFile(jFileChooser1.getSelectedFile())));
                GraphicalFollower g = new GraphicalFollower();
                g.setVisible(true);
                new DumbFollower(Util.stringToPath236(Util.readStringFromFile(jFileChooser1.getSelectedFile())), g);
            } catch (IOException ex) {
                Logger.getLogger(OpenFile.class.getName()).log(Level.SEVERE, null, ex);
            }
        this.setVisible(false);
        }
        
    }                                             
                                   


    // Variables declaration - do not modify                     
    private javax.swing.JFileChooser jFileChooser1;
    // End of variables declaration                   
}
